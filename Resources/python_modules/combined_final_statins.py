# -*- coding: utf-8 -*-
"""combined_final_statins.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1at1GSWDRxOYaZoKW0g-ItEtfKSngQ2di
"""

# Import the dependecies
from google.colab import files
import requests
import pandas as pd
import json
from requests.structures import CaseInsensitiveDict
import time
import datetime
import re
import numpy as np
import ssl
ssl._create_default_https_context = ssl._create_unverified_context
import warnings
warnings.filterwarnings('ignore')

def clean_comb_final(dfcopy):
  dfcopy.drop(columns='Unnamed: 0', inplace=True)
  dfcopy['safetyreportid'].duplicated().any()
  # impute drugstartdate using Last observation carried forward (LOCF)
  dfcopy['patient_drug_drugstartdate'] = dfcopy['patient_drug_drugstartdate'].fillna(method ='ffill')
  dfcopy['patient_drug_medicinalproduct'].value_counts()
  dfcopy['patient_drug_medicinalproduct'] = dfcopy['patient_drug_medicinalproduct'].apply(
      lambda row : "ATORVASTATIN" if re.match('.*ATORVASTATIN*',str(row)) else row
      )
  dfcopy['patient_drug_medicinalproduct'] = dfcopy['patient_drug_medicinalproduct'].apply(
      lambda row : "ROSUVASTATIN" if re.match('.*ROSUVASTATIN*',str(row)) else row
      )
  dfcopy['patient_drug_medicinalproduct'] = dfcopy['patient_drug_medicinalproduct'].apply(
      lambda row : "SIMVASTATIN" if re.match('.*SIMVASTATIN*',str(row)) else row
      )
  dfcopy['patient_drug_medicinalproduct'] = dfcopy['patient_drug_medicinalproduct'].apply(
      lambda row : "LOVASTATIN" if re.match('.*LOVASTATIN*',str(row)) else row
      )
  dfcopy['patient_drug_medicinalproduct'] = dfcopy['patient_drug_medicinalproduct'].apply(
      lambda row : "FLUVASTATIN" if re.match('.*FLUVASTATIN*',str(row)) else row
      )
  dfcopy['patient_drug_medicinalproduct'] = dfcopy['patient_drug_medicinalproduct'].apply(
      lambda row : "PRAVASTATIN" if re.match('.*PRAVASTATIN*',str(row)) else row
      )
  dfcopy['patient_patientonsetage'] = dfcopy['patient_patientonsetage'].apply(
      lambda row : round(int(row))
      )
  dfcopy = dfcopy.loc[(dfcopy['patient_patientonsetage'] <= 110) | (dfcopy['patient_patientonsetage'].isnull())]
  # fill primary source country with most frequent method
  from sklearn.impute import SimpleImputer
  imputeDosage = SimpleImputer(strategy="most_frequent")
  dfcopy['patient_drug_drugdosageform'] = imputeDosage.fit_transform(dfcopy[['patient_drug_drugdosageform']])
  cols_to_keep = ['safetyreportid',
  'primarysourcecountry',
  'transmissiondate',
  'serious',
  'seriousnesshospitalization',
  'companynumb',
  'primarysource_qualification',
  'patient_patientonsetage',
  'patient_patientsex',
  'patient_drug_drugcharacterization',
  'patient_drug_medicinalproduct',
  'patient_drug_drugstructuredosagenumb',
  'patient_drug_drugstructuredosageunit',
  'patient_drug_drugadministrationroute',
  'patient_drug_drugindication',
  'patient_drug_drugstartdate',
  'patient_drug_drugenddate',
  'patient_drug_actiondrug',
  'nb_concomitant',
  'nb_interacting',
  'patient_patientweight',
  'seriousnessother',
  'patient_drug_drugdosageform',
  'seriousnessdisabling',
  'seriousnessdeath',
  'seriousnesslifethreatening',
  'seriousnesscongenitalanomali',
  'Myalgia',
  'Fall',
  'Diarrhoea',
  'Nausea',
  'Asthenia',
  'Dyspnoea',
  'Rhabdomyolysis',
  'Drug interaction',
  'Acute kidney injury',
  'Muscular weakness']
  dfcopy = dfcopy[cols_to_keep]
  values_for_filling = {'Myalgia': 0,'Fall':0,'Diarrhoea':0,'Nausea':0,'Asthenia':0,'Dyspnoea':0,'Rhabdomyolysis':0,'Rhabdomyolysis':0,'Drug interaction':0,'Acute kidney injury':0,'Muscular weakness':0}
  dfcopy.fillna(values_for_filling,inplace=True)
  list_drug = dfcopy['patient_drug_medicinalproduct'].to_list()
  list_drug = list(set(list_drug))
  len(list_drug)
  not_stat = []
  for i in list_drug:
    if not re.match('.*ATORVASTATIN.*',i):
      if not re.match('.*ROSUVASTATIN.*',i):
        if not re.match('.*PRAVASTATIN.*',i):
          if not re.match('.*FLUVASTATIN.*',i):
            if not re.match('.*SIMVASTATIN.*',i):
              if not re.match('.*LOVASTATIN.*',i):
                not_stat.append(i)

  not_stat = sorted(not_stat)
  not_stat2 = ['ACEBUTOLOL',
  'ACENOCOUMAROL',
  'ACETAMINOPHEN.',
  'ACETAMINOPHEN;CAFFEINE',
  'ACETYLSALICYLIC ACID',
  'ACLIDINIUM BROMIDE',
  'ACTEMRA',
  'ACTISKENAN',
  'ADVIL',
  'ALBUTEROL',
  'ALBUTEROL SULFATE',
  'ALENDRONATE SODIUM\\CHOLECALCIFEROL',
  'ALFUZOSIN',
  'ALLOPURINOL',
  'ALLOPURINOL.',
  'AMG 145',
  'AMIODARONE',
  'AMIODARONE HCL',
  'AMIODARONE HYDROCHLORIDE.',
  'AMLODIPINE',
  'AMLODIPINE BESYLATE',
  'AMLODIPINE\\RAMIPRIL',
  'AMOXICILLIN',
  'ANTALNOX',
  'APIXABAN',
  'APO-TRAZODONE',
  'ARIPIPRAZOLE.',
  'ASA',
  'ASCORBIC ACID\\PEG-3350\\POTASSIUM CHLORIDE\\SODIUM (ASCORBATE/CHLORIDE/S',
  'ASCORBIC ACID\\POLYETHYLENE GLYCOL 4000\\POTASSIUM CL\\SOD ASCORBATE\\SOD',
  'ASPIRIN',
  'ASPIRIN                            /00002701/',
  'ASPIRIN (ACETYLSALICYLIC ACID) (ACETYLSALICYLIC ACID)',
  'ASPIRIN.',
  'ATENOLOL.',
  'ATROVENT',
  'AZATHIOPRINE.',
  'AZD6140',
  'BARACLUDE',
  'BENSERAZIDE HYDROCHLORIDE',
  'BERODUAL',
  'BETAMETHASONE\\MUPIROCIN',
  'BILOCOR',
  'BISACODYL',
  'BISOPROLOL',
  'BISOPROLOL FUMARATE.',
  'BLINDED ALIROCUMAB',
  'BLINDED NO STUDY DRUG GIVEN',
  'BLINDED ZIDOVUDINE',
  'BRALTUS',
  'BREO ELLIPTA',
  'BUSERELIN ACETATE',
  'BUTYLSCOPOLAMINUMBROMID',
  'BYETTA',
  'CALCIUM GLUCONATE.',
  'CANCIDAS',
  'CANDESARTAN (+) HYDROCHLOROTHIAZIDE',
  'CANDESARTAN CILEXETIL.',
  'CANDESARTAN.',
  'CARBAMAZEPINE.',
  'CARBIDOPA AND LEVODOPA',
  'CARVEDILOL',
  'CARVEDILOL.',
  'CEFTRIAXONE.',
  'CELEBREX',
  'CELECOXIB.',
  'CERTICAN',
  'CHOLECALCIFEROL',
  'CINITAPRIDE.',
  'CINNARIZINE',
  'CISPLATIN.',
  'CITALOPRAM',
  'CLARITHROMYCIN.',
  'CLOPIDOGREL',
  'CLOPIDOGREL HYDROGEN SULFATE',
  'CLOZAPINE',
  'CLOZARIL',
  'COAPROVEL',
  'COCODAMOL',
  'COLESEVELAM HYDROCHLORIDE',
  'COLOXYL WITH SENNA',
  'COMBIVENT',
  'COMIRNATY',
  'CONCOR',
  'CUPRIC OXIDE',
  'CYANOCOBALAMIN',
  'CYCLOBENZAPRINE',
  'CYCLOBENZAPRINE HCL',
  'CYCLOBENZAPRINE.',
  'CYMBALTA',
  'DAFALGAN',
  'DAPAGLIFLOZIN',
  'DARBEPOETIN ALFA',
  'DESONIDE',
  'DESYREL',
  'DEXAMETHASONE.',
  'DIGITOXIN',
  'DILANTIN',
  'DILATREND',
  'DILZEM',
  'DIPROBASE',
  'DIPYRIDAMOLE.',
  'DIVALPROEX SODIUM',
  'DOLIPRANE',
  'DONEPEZIL',
  'DOXAZOSIN',
  'DOXEPIN HYDROCHLORIDE',
  'EFEXOR',
  'EMPAGLIFLOZIN (+) METFORMIN HYDROCHLORIDE',
  'EMPAGLIFLOZIN\\METFORMIN HYDROCHLORIDE',
  'EMTRICITABINE',
  'ENALAPRIL',
  'ENBREL',
  'ENTACT - H. LUNDBECK A/S',
  'ENTRESTO',
  'ENVARSUS XR',
  'ENZALUTAMIDE',
  'EPLERENONE',
  'EPLERENONE.',
  'ERTAPENEM SODIUM',
  'ESCITALOPRAM',
  'ESOMEPRAZOLE.',
  'ETORICOXIB.',
  'EUPRESSYL                          /00631801/',
  'EXENATIDE',
  'EXFORGE',
  'EZETIMIBE',
  'EZETIMIBE TABLETS',
  'EZETIMIBE.',
  'FELODIPINE.',
  'FENOFIBRATE.',
  'FINASTERIDE.',
  'FLUTICASONE FUROATE\\VILANTEROL TRIFENATATE',
  'FLUTICASONE PROPIONATE',
  'FLUTICASONE PROPIONATE\\SALMETEROL XINAFOATE',
  'FOLIC ACID',
  'FOLIC ACID.',
  'FOLSAN',
  'FUROSEMID',
  'FUROSEMIDE',
  'FUROSEMIDE.',
  'GABAPENTIN.',
  'GALANTAMINE HYDROBROMIDE.',
  'GLIMEPIRIDE.',
  'GLUCOPHAGE',
  'GLYBURIDE',
  'GLYCERYL TRINITRATE',
  'GRAMICIDIN\\NEOMYCIN SULFATE\\POLYMYXIN B SULFATE',
  'HALOPERIDOL DECANOATE.',
  'HESPERIDIN',
  'HIDROCORTISONA',
  'HISTEC',
  'HUMALOG']
  not_stat1 = ['HYDRALAZINE',
  'HYDROCHLOROTHIAZIDE',
  'HYDROCHLOROTHIAZIDE.',
  'HYDROCHLOROTHIAZIDE\\SPIRONOLACTONE',
  'HYDROXYCHLOROQUINE',
  'HYDROXYZINE HYDROCHLORIDE.',
  'ICATIBANT',
  'INDAPAMIDE',
  'INDAPAMIDE.',
  'INSULIN',
  'IODIXANOL.',
  'IRBESARTAN.',
  'IRON',
  'ISOSORBIDE MONONITRATE',
  'IVABRADINE HYDROCHLORIDE',
  'JAKAVI',
  'JANUMET',
  'JANUVIA',
  'KALINOR (POTASSIUM CHLORIDE)',
  'L?CARBOCISTEINE',
  'LACTULOSE',
  'LASILIX',
  'LASIX',
  'LERCANIDIPINE',
  'LEUCOVORIN',
  'LEVEMIR',
  'LEVOFLOXACIN.',
  'LEVOTHYROX',
  'LEVOTHYROXINE',
  'LEVOTHYROXINE SODIUM',
  'LEVOTHYROXINE SODIUM.',
  'LEVOTHYROXINE.',
  'LINAGLIPTIN',
  'LISINOPRIL.',
  'LODALIS',
  'LOJUXTA',
  'LORAZEPAM.',
  'LOSARTAN.',
  'LOVASTATIN',
  'LYRICA',
  'MAGNESIUM CARBONATE\\MAGNESIUM OXIDE',
  'MEPOLIZUMAB',
  'METFORMIN',
  'METFORMIN HYDROCHLORIDE;SITAGLIPTIN PHOSPHATE MONOHYDRATE',
  'METHOCARBAMOL.',
  'METHOTREXATE',
  'METHOTREXATE (TRADE NAME UNKNOWN)',
  'METHOTREXATE SODIUM',
  'METHOTREXATE.',
  'METOPROLOL',
  'MICARDIS',
  'MINITRAN',
  'MIRTAZAPINE',
  'MOBICOX',
  'MORNIFLUMATE',
  'MORPHINE SULFATE',
  'MOVICOL',
  'MULTIVITAMIN',
  'MULTIVITAMINE(S)',
  'NAPROXEN',
  'NAPROXEN SODIUM.',
  'NEXIUM',
  'NICOPAVERINA',
  'NIFEDIPINE',
  'NITROGLYCERIN.',
  'NOVALGIN',
  'NOVAMINSULFON',
  'NOVOMIX',
  'NOVORAPID',
  'OLMETEC PLUS',
  'OMEGA-3 FATTY ACIDS',
  'OMEPRAZOLE',
  'OMEPRAZOLE.',
  'OMEPRAZOLO',
  'ORENCIA',
  'OXAZEPAM',
  'OXAZEPAM.',
  'PANCURONIUM BROMIDE',
  'PANTOPRAZOLE',
  'PANTOPRAZOLE MAGNESIUM',
  'PANTOPRAZOLE SODIUM ANHYDROUS',
  'PARACETAMOL',
  'PARACETAMOL B BRAUN',
  'PERINDOPRIL',
  'PHYSIOTENS',
  'PITAVASTATIN CALCIUM',
  'POLYETHYLENE GLYCOL 3350\\POTASSIUM CHLORIDE\\SODIUM BICARBONATE\\SODIUM',
  'POTASSIUM',
  'PREDNISOLONE.',
  'PREDNISONE',
  'PREDNISONE.',
  'PREGABALIN',
  'PREGABALIN PFIZER',
  'PRILOCAINE',
  'PRIVIGEN',
  'PROCORALAN',
  'PROPRANOLOL',
  'PULMICORT TURBUHALER',
  'QUETIAPINE.',
  'QUINAPRIL HYDROCHLORIDE',
  'QUINAPRIL HYDROCHLORIDE.',
  'RABEPRAZOLE',
  'RAMIPRIL',
  'RAMIPRIL.',
  'RANITIDINE.',
  'REMERON',
  'REMICADE',
  'REPATHA',
  'RESIKALI',
  'RISPERIDONE.',
  'RITONAVIR',
  'RIVAROXABAN',
  'RIVOTRIL',
  'ROPINIROLE.',
  'SACUBITRIL;VALSARTAN',
  'SACUBITRIL\\VALSARTAN',
  'SENNOSIDES',
  'SERESTA',
  'SEROPRAM (CITALOPRAM HYDROCHLORIDE)',
  'SERTRALINE',
  'SERTRALINE HYDROCHLORIDE.',
  'SILVER SULFADIAZENE',
  'SIMPONI',
  'SINTROM',
  'SITAGLIPTIN PHOSPHATE',
  'SODIUM BICARBONATE\\SODIUM CHLORIDE',
  'SODIUM CITRATE.',
  'SOLU?CORTEF',
  'SOTALOL.',
  'SPIRIVA',
  'SPIRIVA RESPIMAT',
  'SPIRONOLACTONE.',
  'SUKKARTO',
  'SULFAMETHOXAZOLE\\TRIMETHOPRIM',
  'SULFASALAZINE',
  'SULFASALAZINE.',
  'SUMATRIPTAN SUCCINATE',
  'SYMBICORT',
  'TACROLIMUS',
  'TACROLIMUS.',
  'TADALAFIL.',
  'TAHOR',
  'TAMSULOSIN',
  'TAMSULOSIN HYDROCHLORIDE.',
  'TARCEVA (ERLOTINIB HYDROCHLORIDE) TABLET',
  'TARKA',
  'TEICOPLANIN',
  'TELMISARTAN',
  'TEMAZEPAM.',
  'TENOFOVIR DISOPROXIL FUMARATE TABLET',
  'TESTOSTERONE',
  'THEOPHYLLINE',
  'THIETHYLPERAZINE',
  'TICAGRELOR',
  'TIOTROPIUM BROMIDE',
  'TIOTROPIUM BROMIDE MONOHYDRATE',
  'TIOTROPIUM/TIOTROPIUM BROMIDE',
  'TOCILIZUMAB',
  'TOPIRAMATE.',
  'TORASEMIDE',
  'TORSEMIDE',
  'TOVIAZ',
  'TRAMADOL.',
  'TRANDATE',
  'TRIMETHOPRIM.',
  'TROSICAM',
  'TROSPIUM CHLORIDE',
  'TYLENOL WITH CODEINE',
  'UMECLIDINIUM BROMIDE\\VILANTEROL TRIFENATATE',
  'USTEKINUMAB',
  'VALPROIC ACID',
  'VALSARTAN.',
  'VANCOMYCIN',
  'VARENICLINE TARTRATE',
  'VENLAFAXINE HYDROCHLORIDE',
  'VENTOLIN',
  'VIREAD',
  'VITAMIN B12',
  'VITAMIN D',
  'VITAMIN D NOS',
  'VITAMIN D3',
  'WARFARIN',
  'XARELTO',
  'XELJANZ XR',
  'XYLOMETAZOLINE HYDROCHLORIDE',
  'ZANIDIP',
  'ZANTAC',
  'ZENHALE',
  'ZESTRIL',
  'ZINC OXIDE',
  'ZOCOR',
  'ZOLPIDEM TARTRATE 5 MG',
  'ZOLPIDEM TARTRATE.',
  'ZOPICLONE',
  'ZOTON',
  'ZYLOPRIM',
  'ZYPREXA',
  'ZYRTEC',
  'TIOTROPIUM',
  'METOPROLOL.']
  for i in not_stat1:
    dfcopy = dfcopy.loc[dfcopy['patient_drug_medicinalproduct'] != i]
  for i in not_stat2:
    dfcopy = dfcopy.loc[dfcopy['patient_drug_medicinalproduct'] != i]
  dfcopy['patient_drug_medicinalproduct'].value_counts()
  dfcopy.info()
  return dfcopy